/*
	Dynamic object support
*/

//drop type Dynamic;
create type Dynamic from class "Newtonsoft.Json.Linq.JObject" 
{
	representation Dynamic 
	{ 
		Content : String 
			read class "System.Internet.DynamicContentReadAccessorNode"
			write class "System.Internet.DynamicContentWriteAccessorNode"
	} class "System.Internet.DynamicContentSelectorNode",
	representation AsString { AsString : String read class "System.ObjectAsStringReadAccessorNode" }
//	representation AsDisplayString { AsDisplayString : String read class "FHIRCore.FHIRBaseDisplayString" }//,
//	representation AsJSON
//	{
//		AsJSON : String 
//			read class "FHIRCore.ObjectAsJSONReadAccessorNode"
//			write class "FHIRCore.ObjectAsJSONWriteAccessorNode"
//	} class "FHIRCore.ObjectAsJSONSelectorNode"
}
	class "FHIR.Core.JSONObjectConveyor"
	static tags { DAE.AsString = "AsString", DAE.AsDisplayString = "AsDisplayString" };

create operator iEqual(const ALeft : Dynamic, const ARight : Dynamic) : Boolean class "System.Internet.DynamicEqualNode";	
create operator Dynamic(const AContent : String) : Dynamic class "System.Internet.DynamicSelectorNode";
create operator Get(const ADynamic : Dynamic, const AKey : scalar) : Dynamic class "System.Internet.DynamicGetNode";
create operator GetType(const ADynamic : Dynamic) : String class "System.Internet.DynamicGetTypeNode";
create operator Set(const ADynamic : Dynamic, const AKey : scalar, const AValue : Dynamic) : Dynamic class "System.Internet.DynamicSetNode";
create operator ToList(const AContent : Dynamic) : list(Dynamic) class "System.Internet.DynamicToListNode";
create operator ToBoolean(const AContent : Dynamic) : Boolean class "System.Internet.DynamicToBooleanNode";
create operator ToByte(const AContent : Dynamic) : Byte class "System.Internet.DynamicToByteNode";
create operator ToShort(const AContent : Dynamic) : Short class "System.Internet.DynamicToShortNode";
create operator ToInteger(const AContent : Dynamic) : Integer class "System.Internet.DynamicToIntegerNode";
create operator ToLong(const AContent : Dynamic) : Long class "System.Internet.DynamicToLongNode";
create operator ToDecimal(const AContent : Dynamic) : Decimal class "System.Internet.DynamicToDecimalNode";
//create operator ToMoney(const AContent : Dynamic) : Money class "System.Internet.DynamicToMoneyNode";
create operator ToString(const AContent : Dynamic) : String class "System.Internet.DynamicToStringNode";
create operator ToTimeSpan(const AContent : Dynamic) : TimeSpan class "System.Internet.DynamicToTimeSpanNode";
create operator ToDateTime(const AContent : Dynamic) : DateTime class "System.Internet.DynamicToDateTimeNode";
//create operator ToDate(const AContent : Dynamic) : Date class "System.Internet.DynamicToDateNode";
//create operator ToTime(const AContent : Dynamic) : Time class "System.Internet.DynamicToTimeNode";
