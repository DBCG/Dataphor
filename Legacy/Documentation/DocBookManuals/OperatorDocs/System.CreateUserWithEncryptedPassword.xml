<?xml version="1.0"?>
<!DOCTYPE sect2 SYSTEM "/src/Docs/DocBookManuals/docbookx.dtd">
<sect2> 
	 <sect2info><date>Friday, April 16, 2004 14:18:45</date> 
	 </sect2info> 
	 <title>System.CreateUserWithEncryptedPassword</title> 
	 <para></para> 
	 <bridgehead renderas="sect3">Remarks</bridgehead> 
	 <para>Creates a Dataphor User.</para> 
	 <para>A user is the basic unit of authentication in the DAE. A user must be
		  a member of one, and only one, group. If no group is specified, the current
		  user must have management rights to the <symbol>User</symbol> group and the new
		  user is set as a member of the <symbol>User</symbol> group. This group
		  membership fixes the users place in the management and ownership mechanisms of
		  the security model. There are two system-defined users: System and Admin. The
		  System user is a member of the System group, and is used by the DAE to perform
		  system-level functions. Only the DAE can login as the System user. The Admin
		  user is a member of the Admin group, and is the central administrative user for
		  the DAE.</para> 
	 <example> 
		  <title>Example</title> 
		  <programlisting>select EncryptPassword("Password");</programlisting> 
		  <programlisting>ED9BnEp1mumPakUrawTrdYA=</programlisting> 
		  <programlisting>CreateRole("SoftwareDeveloper");
CreateRight("AddProgram");
GrantRightToRole("AddProgram", "SoftwareDeveloper");

CreateGroup("Developers", "User");
AddGroupToRole("Developers", "SoftwareDeveloper");

// create JS1 as member of User group
CreateUserWithEncryptedPassword
(
  "JS1",
  "JohnSmith1",
  "ED9BnEp1mumPakUrawTrdYA="
);

// move JS1 to Developers group
SetUserGroup("JS1", "Developers");

DropUser("JS1");
DropGroup("Developers");
DropRight("AddProgram");
DropRole("SoftwareDeveloper");</programlisting> 
	 </example> 
	 <formalpara> 
		  <title>See Also</title> 
		  <para> 
				<literallayout><ulink url="DUGSecurity.html">Security</ulink>
<ulink url="SLRSystem.CreateGroup.html">System.CreateGroup</ulink>
<ulink url="SLRSystem.CreateRight.html">System.CreateRight</ulink>
<ulink url="SLRSystem.CreateRole.html">System.CreateRole</ulink>
<ulink url="SLRSystem.CreateUser.html">System.CreateUser</ulink>
<ulink url="SLRSystem.ChangePassword.html">System.ChangePassword</ulink>
<ulink url="SLRSystem.AddUserToRole.html">System.AddUserToRole</ulink>
<ulink url="SLRSystem.DropUser.html">System.DropUser</ulink>
<ulink url="SLRSystem.GrantRightToUser.html">System.GrantRightToUser</ulink>
<ulink url="SLRSystem.RemoveUserFromRole.html">System.RemoveUserFromRole</ulink>
<ulink url="SLRSystem.RevokeRightFromUser.html">System.RevokeRightFromUser</ulink>
<ulink url="SLRSystem.RevertRightForUser.html">System.RevertRightForUser</ulink> 
<ulink url="SLRSystem.SetEncryptedPassword.html">System.SetEncryptedPassword</ulink>
<ulink url="SLRSystem.SetPassword.html">System.SetPassword</ulink>
<ulink url="SLRSystem.SetUserGroup.html">System.SetUserGroup</ulink>
<ulink url="SLRSystem.SetUserName.html">System.SetUserName</ulink>
<ulink url="SLRSystem.UserExists.html">System.UserExists</ulink>
<ulink url="SLRSystem.UserHasRight.html">System.UserHasRight</ulink>
</literallayout></para> 
	 </formalpara> 
</sect2> 
