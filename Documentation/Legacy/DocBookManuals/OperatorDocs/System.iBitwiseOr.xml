<?xml version="1.0"?>
<!DOCTYPE sect2 SYSTEM "/src/Docs/DocBookManuals/docbookx.dtd">
<sect2> 
	 <sect2info><date>Friday, April 02, 2004 09:30:52</date> 
	 </sect2info> 
	 <title>iBitwiseOr</title> 
	 <para></para> 
	 <bridgehead renderas="sect3">Remarks</bridgehead> 
	 <para><symbol>|</symbol> is the parser recognized symbol for this operator.
		  <symbol>|</symbol> is the vertical bar, also known as the pipe. <symbol>Bitwise
		  Or</symbol> matches bit for bit, and compares the corresponding bits for two
		  values. If both are 0, then the corresponding bit in the resulting value will
		  be 0, otherwise it will be 1.</para> 
	 <example> 
		  <title>Example</title> 
		  <programlisting>create table BitwiseOr { One : Integer, Two : Integer, Three : Integer };
begin
	var LInteger1 : Integer;
	var LInteger2 : Integer;
	var LInteger3 : Integer;
	LInteger1 := 314159265; // this has a bit value of 00010010 10111001 10110000 10100001
	LInteger2 := 271828182; // this has a bit value of 00010000 00110011 11000100 11010110
	LInteger3 := LInteger1 | LInteger2; // 314307831   00010010 10111011 11110100 11110111
	insert table { row { LInteger1 One, LInteger2 Two, LInteger3 Three }} into BitwiseOr;
end;
select BitwiseOr;</programlisting> 
		  <programlisting>Statement Executed Successfully!

Statement Executed Successfully!

One       Two       Three     
--------- --------- --------- 
314159265 271828182 314307831</programlisting> 
	 </example> 
	 <formalpara> 
		  <title>See Also</title> 
		  <para> 
				<literallayout><ulink url="D4LGOperatorPrecedence.html">Operator Precedence</ulink>
<ulink url="SLRiOr.html">iOr (<symbol>or</symbol>)</ulink></literallayout></para> 
	 </formalpara> 
</sect2> 
