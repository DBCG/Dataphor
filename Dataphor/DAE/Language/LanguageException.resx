<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="107100" xml:space="preserve">
    <value>Statement expected.</value>
  </data>
  <data name="107101" xml:space="preserve">
    <value>Expression expected.</value>
  </data>
  <data name="107102" xml:space="preserve">
    <value>Identifier expected.</value>
  </data>
  <data name="107103" xml:space="preserve">
    <value>Instruction expected.</value>
  </data>
  <data name="107104" xml:space="preserve">
    <value>Statement container.</value>
  </data>
  <data name="107105" xml:space="preserve">
    <value>Expression container.</value>
  </data>
  <data name="107106" xml:space="preserve">
    <value>Case item expected.</value>
  </data>
  <data name="107107" xml:space="preserve">
    <value>Else expression expected.</value>
  </data>
  <data name="107108" xml:space="preserve">
    <value>Case item expression container.</value>
  </data>
  <data name="107109" xml:space="preserve">
    <value>ErrorHandler container.</value>
  </data>
  <data name="107110" xml:space="preserve">
    <value>Target expected.</value>
  </data>
  <data name="107111" xml:space="preserve">
    <value>Update column expression container.</value>
  </data>
  <data name="107112" xml:space="preserve">
    <value>Server name expected.</value>
  </data>
  <data name="107113" xml:space="preserve">
    <value>Column expression container.</value>
  </data>
  <data name="107114" xml:space="preserve">
    <value>NamedColumn expression container.</value>
  </data>
  <data name="107115" xml:space="preserve">
    <value>Column name expected.</value>
  </data>
  <data name="107116" xml:space="preserve">
    <value>RenameColumn expression container.</value>
  </data>
  <data name="107117" xml:space="preserve">
    <value>Adorn column expression container.</value>
  </data>
  <data name="107118" xml:space="preserve">
    <value>AggregateColumn expression container.</value>
  </data>
  <data name="107119" xml:space="preserve">
    <value>Aggregate expression "{0}" may only contain expression, column, or aggregate column expressions.</value>
  </data>
  <data name="107120" xml:space="preserve">
    <value>Column name expected in element "{0}".</value>
  </data>
  <data name="107121" xml:space="preserve">
    <value>Table name expected.</value>
  </data>
  <data name="107122" xml:space="preserve">
    <value>Device name expected.</value>
  </data>
  <data name="107123" xml:space="preserve">
    <value>View name expected.</value>
  </data>
  <data name="107124" xml:space="preserve">
    <value>PropertyDefintion container.</value>
  </data>
  <data name="107125" xml:space="preserve">
    <value>PropertyDefintion container.</value>
  </data>
  <data name="107126" xml:space="preserve">
    <value>PropertyDefintion container.</value>
  </data>
  <data name="107127" xml:space="preserve">
    <value>RepresentationDefintion container.</value>
  </data>
  <data name="107128" xml:space="preserve">
    <value>RepresentationDefintion container.</value>
  </data>
  <data name="107129" xml:space="preserve">
    <value>RepresentationDefintion container.</value>
  </data>
  <data name="107130" xml:space="preserve">
    <value>ScalarType special value definition container.</value>
  </data>
  <data name="107131" xml:space="preserve">
    <value>ScalarType special value definition container.</value>
  </data>
  <data name="107132" xml:space="preserve">
    <value>ScalarType special value definition container.</value>
  </data>
  <data name="107133" xml:space="preserve">
    <value>ScalarType name definition container.</value>
  </data>
  <data name="107134" xml:space="preserve">
    <value>ScalarType name expected.</value>
  </data>
  <data name="107135" xml:space="preserve">
    <value>Class definition expected.</value>
  </data>
  <data name="107136" xml:space="preserve">
    <value>Operator name expected.</value>
  </data>
  <data name="107137" xml:space="preserve">
    <value>Type specifier expected.</value>
  </data>
  <data name="107138" xml:space="preserve">
    <value>Class definition expected.</value>
  </data>
  <data name="107139" xml:space="preserve">
    <value>Device map item container.</value>
  </data>
  <data name="107140" xml:space="preserve">
    <value>Device map item container.</value>
  </data>
  <data name="107141" xml:space="preserve">
    <value>Device map item container.</value>
  </data>
  <data name="107142" xml:space="preserve">
    <value>Device map item container.</value>
  </data>
  <data name="107143" xml:space="preserve">
    <value>Device map item container.</value>
  </data>
  <data name="107144" xml:space="preserve">
    <value>Device map item container.</value>
  </data>
  <data name="107145" xml:space="preserve">
    <value>ColumnDefinition container.</value>
  </data>
  <data name="107146" xml:space="preserve">
    <value>AlterColumnDefinition container.</value>
  </data>
  <data name="107147" xml:space="preserve">
    <value>DropColumnDefinition container.</value>
  </data>
  <data name="107148" xml:space="preserve">
    <value>KeyColumnDefinition container.</value>
  </data>
  <data name="107149" xml:space="preserve">
    <value>ReferenceColumnDefinition container.</value>
  </data>
  <data name="107150" xml:space="preserve">
    <value>OrderColumnDefinition container.</value>
  </data>
  <data name="107151" xml:space="preserve">
    <value>KeyDefinition container.</value>
  </data>
  <data name="107152" xml:space="preserve">
    <value>AlterKeyDefinition container.</value>
  </data>
  <data name="107153" xml:space="preserve">
    <value>DropKeyDefinition container.</value>
  </data>
  <data name="107154" xml:space="preserve">
    <value>ReferenceDefinition container.</value>
  </data>
  <data name="107155" xml:space="preserve">
    <value>AlterReferenceDefinition container.</value>
  </data>
  <data name="107156" xml:space="preserve">
    <value>DropReferenceDefinition container.</value>
  </data>
  <data name="107157" xml:space="preserve">
    <value>OrderDefinition container.</value>
  </data>
  <data name="107158" xml:space="preserve">
    <value>AlterOrderDefinition container.</value>
  </data>
  <data name="107159" xml:space="preserve">
    <value>DropOrderDefinition container.</value>
  </data>
  <data name="107160" xml:space="preserve">
    <value>ConstraintDefinition container.</value>
  </data>
  <data name="107161" xml:space="preserve">
    <value>AlterConstraintDefinition container.</value>
  </data>
  <data name="107162" xml:space="preserve">
    <value>DropConstraintDefinition container.</value>
  </data>
  <data name="107163" xml:space="preserve">
    <value>ClassAttributeDefinition container.</value>
  </data>
  <data name="107164" xml:space="preserve">
    <value>Class attribute "{0}" not found.</value>
  </data>
  <data name="107165" xml:space="preserve">
    <value>NamedTypeSpecifier container.</value>
  </data>
  <data name="107166" xml:space="preserve">
    <value>Formal parameter container.</value>
  </data>
  <data name="107167" xml:space="preserve">
    <value>Modified type specifier container.</value>
  </data>
  <data name="107168" xml:space="preserve">
    <value>Delete statement "{0}" may only contain delete, from, and where clauses.</value>
  </data>
  <data name="107169" xml:space="preserve">
    <value>Delete clause expected in delete statement "{0}".</value>
  </data>
  <data name="107170" xml:space="preserve">
    <value>From clause expected in delete statement "{0}".</value>
  </data>
  <data name="107171" xml:space="preserve">
    <value>Select clause "{0}" may only contain column expressions.</value>
  </data>
  <data name="107172" xml:space="preserve">
    <value>Join clause "{0}" may only contain a from clause and a join expression.</value>
  </data>
  <data name="107173" xml:space="preserve">
    <value>From clause expected in join clause "{0}".</value>
  </data>
  <data name="107174" xml:space="preserve">
    <value>From clause "{0}" may only contain join clauses.</value>
  </data>
  <data name="107175" xml:space="preserve">
    <value>Table expression expected in from clause "{0}".</value>
  </data>
  <data name="107176" xml:space="preserve">
    <value>Table alias expected in from clause "{0}".</value>
  </data>
  <data name="107177" xml:space="preserve">
    <value>Join expression expected in join clause "{0}".</value>
  </data>
  <data name="107178" xml:space="preserve">
    <value>Invalid join type in join clause "{0}".</value>
  </data>
  <data name="107179" xml:space="preserve">
    <value>Order clause "{0}" may only contain order field expressions.</value>
  </data>
  <data name="107180" xml:space="preserve">
    <value>Select expression "{0}" may only contain select, from, where, group or having clauses.</value>
  </data>
  <data name="107181" xml:space="preserve">
    <value>Select clause expected in select expression "{0}".</value>
  </data>
  <data name="107182" xml:space="preserve">
    <value>From clause expected in select expression "{0}".</value>
  </data>
  <data name="107183" xml:space="preserve">
    <value>Union expression "{0}" may only contain select expressions.</value>
  </data>
  <data name="107184" xml:space="preserve">
    <value>Select expression expected in union expression "{0}".</value>
  </data>
  <data name="107185" xml:space="preserve">
    <value>Query expression "{0}" may only contain select or union expressions.</value>
  </data>
  <data name="107186" xml:space="preserve">
    <value>Select expression expected in query expression "{0}".</value>
  </data>
  <data name="107187" xml:space="preserve">
    <value>Select statement "{0}" may only contain a query expression or order by clause.</value>
  </data>
  <data name="107188" xml:space="preserve">
    <value>Query expression expected in select statement "{0}".</value>
  </data>
  <data name="107189" xml:space="preserve">
    <value>Insert clause "{0}" may only contain a table expression and insert field expressions.</value>
  </data>
  <data name="107190" xml:space="preserve">
    <value>Insert statement "{0}" may only contain an insert clause and a values expression.</value>
  </data>
  <data name="107191" xml:space="preserve">
    <value>Insert clause expected in insert statement "{0}".</value>
  </data>
  <data name="107192" xml:space="preserve">
    <value>Expression expected in insert statement "{0}".</value>
  </data>
  <data name="107193" xml:space="preserve">
    <value>Update clause "{0}" may only contain a table expression and update field expressions.</value>
  </data>
  <data name="107194" xml:space="preserve">
    <value>Update statement "{0}" may only contain update, from, and where clauses.</value>
  </data>
  <data name="107195" xml:space="preserve">
    <value>Update clause expected in update statement "{0}".</value>
  </data>
  <data name="107196" xml:space="preserve">
    <value>From clause expected in update statement "{0}".</value>
  </data>
  <data name="107197" xml:space="preserve">
    <value>Delete clause "{0}" may only contain a table expression.</value>
  </data>
  <data name="107198" xml:space="preserve">
    <value>Dataphor exception: {0}</value>
  </data>
  <data name="107199" xml:space="preserve">
    <value>Unknown type specifier: "{0}".</value>
  </data>
  <data name="107200" xml:space="preserve">
    <value>Tag reference may not be null.</value>
  </data>
  <data name="107201" xml:space="preserve">
    <value>Invalid operand "{0}".</value>
  </data>
  <data name="107202" xml:space="preserve">
    <value>Unknown statement class "{0}".</value>
  </data>
  <data name="107203" xml:space="preserve">
    <value>Unknown expression class "{0}".</value>
  </data>
  <data name="107204" xml:space="preserve">
    <value>Unknown instruction "{0}".</value>
  </data>
  <data name="107205" xml:space="preserve">
    <value>Named expression "{0}" not found.</value>
  </data>
  <data name="107206" xml:space="preserve">
    <value>Unknown join type "{0}".</value>
  </data>
  <data name="107207" xml:space="preserve">
    <value>Table alias required.</value>
  </data>
  <data name="107208" xml:space="preserve">
    <value>An entry for the given expression was not found.</value>
  </data>
  <data name="107209" xml:space="preserve">
    <value>{0} container.</value>
  </data>
  <data name="107210" xml:space="preserve">
    <value>Duplicate language modifier "{0}".</value>
  </data>
  <data name="107211" xml:space="preserve">
    <value>Language modifier "{0}" not found.</value>
  </data>
  <data name="107212" xml:space="preserve">
    <value>Language modifier "{0}" is ambiguous.</value>
  </data>
  <data name="107213" xml:space="preserve">
    <value>Class definition already contains a definition for the attribute "{0}".</value>
  </data>
  <data name="107214" xml:space="preserve">
    <value>BrowseColumnDefinition container.</value>
  </data>
  <data name="107215" xml:space="preserve">
    <value>BrowseDefinition container.</value>
  </data>
</root>